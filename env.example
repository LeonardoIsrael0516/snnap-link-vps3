# ========================================
# MICROSERVIÇO LINK AI - Variáveis de Ambiente
# ========================================

# ========================================
# BANCO DE DADOS DO MICROSERVIÇO
# ========================================
# Este banco armazena APENAS as páginas de IA (ai_pages, users sincronizados)
# Desenvolvimento: PostgreSQL local
DATABASE_URL="postgresql://postgres:Da05As02He02$@db.awetbsslwdbltvhahozo.supabase.co:5432/postgres"
# Produção (mesmo servidor que backend):
# DATABASE_URL="postgresql://link_ai_user:senha@localhost:5432/link_ai"
# Produção (servidor separado):
# DATABASE_URL="postgresql://link_ai_user:senha@pages.meulink.lat:5432/link_ai"

# ========================================
# BANCO PRINCIPAL (para buscar configurações)
# ========================================
# Este banco é o do BACKEND, onde o admin configura API keys
# O microserviço FAZ CONSULTA REMOTA para pegar as configurações
# Desenvolvimento: PostgreSQL local
MAIN_DATABASE_URL="postgresql://postgres:12345678@localhost:5432/meulink?schema=public"
# Produção (backend no mesmo servidor):
# MAIN_DATABASE_URL="postgresql://meulink_user:senha@localhost:5432/meulink"
# Produção (backend em servidor separado):
# MAIN_DATABASE_URL="postgresql://meulink_user:senha@api.meulink.lat:5432/meulink"
# ⚠️ IMPORTANTE: Se backend em servidor separado, libere acesso ao PostgreSQL!

# ========================================
# JWT (Autenticação)
# ========================================
# CRÍTICO: Deve ser EXATAMENTE IGUAL ao do backend!
# O token é gerado pelo backend e validado pelo microserviço
# Se forem diferentes, autenticação falhará (erro 401)
JWT_SECRET="meulink-super-secret-key-2025-nextauth-jwt-token-encryption"

# ========================================
# INTELIGÊNCIA ARTIFICIAL
# ========================================
# Chaves de API são buscadas do banco principal (MAIN_DATABASE_URL)
# Estas variáveis servem como FALLBACK se banco não estiver acessível

# Claude AI (Anthropic) - PRINCIPAL
ANTHROPIC_API_KEY="sk-ant-api03-..."
# Obtenha em: https://console.anthropic.com/

# OpenAI (Fallback)
OPENAI_API_KEY="sk-..."
# Obtenha em: https://platform.openai.com/api-keys

# ========================================
# REDIS (Cache e Rate Limiting)
# ========================================
# Desenvolvimento: Redis local
REDIS_URL="rediss://default:AU9hAAIncDI3ZDE4YTRiYTYzN2M0N2VhYWVhM2JiY2FkMDQ2MGQzOXAyMjAzMjE@glad-hog-20321.upstash.io:6379"
# Produção (mesmo servidor):
# REDIS_URL="rediss://default:AU9hAAIncDI3ZDE4YTRiYTYzN2M0N2VhYWVhM2JiY2FkMDQ2MGQzOXAyMjAzMjE@glad-hog-20321.upstash.io:6379"
# Produção (Redis separado):
# REDIS_URL="redis://:senha@redis.meulink.lat:6379"
# Produção (Redis Cloud - Upstash, Redis Labs):
# REDIS_URL="rediss://default:senha@redis-12345.upstash.io:6379"

# ========================================
# CORS - Origens Permitidas
# ========================================
# Desenvolvimento:
# ALLOWED_ORIGINS="http://localhost:8080,http://localhost:3000"
# Produção (Render + seu domínio):
ALLOWED_ORIGINS="https://snnap.com,https://www.snnap.com,https://snnap-api.onrender.com,https://snnap-pay.onrender.com"

# ========================================
# SERVIDOR
# ========================================
PORT=3002
# Sempre use 3002 para o microserviço

# ========================================
# AMBIENTE
# ========================================
# NODE_ENV="development"
# Produção:
NODE_ENV="production"